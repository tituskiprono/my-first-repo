CREATE DATABASE IF NOT EXISTS med_db;

USE med_db;

CREATE TABLE IF NOT EXISTS hospital(
    HOSPITAL_ID INTEGER PRIMARY KEY,
    HOSPITAL_NAME VARCHAR(255) NOT NULL,
    HOSP_LEVEL CHAR(10) NOT NULL,
    LOCATION VARCHAR(45) NOT NULL,
    HOSP_STATUS VARCHAR(45) NOT NULL
);

-- Correcting the column names in INSERT statement
INSERT INTO hospital(HOSPITAL_ID, HOSPITAL_NAME, HOSP_LEVEL, LOCATION, HOSP_STATUS) 
VALUES
(1, 'K.N.H', 'NATIONAL', 'NAIROBI', 'PUBLIC'),
(2, 'M.T.R.H', 'REFERAL', 'ELDORET', 'PUBLIC');

CREATE TABLE IF NOT EXISTS mo(
    REG_NO VARCHAR(45) PRIMARY KEY,
    M_NAME VARCHAR(45) NOT NULL,
    JOB_GROUP VARCHAR(45) NOT NULL,
    HOSPITAL_ID INTEGER,
    FOREIGN KEY(HOSPITAL_ID) REFERENCES hospital(HOSPITAL_ID)
);

INSERT INTO MO(REG_NO, M_NAME, JOB_GROUP, HOSPITAL_ID) VALUES
('MH47', 'TITUS', 'S', 1),
('MH21', 'DANIEL', 'S', 2);

CREATE TABLE IF NOT EXISTS username(
    USER_NAME VARCHAR(255),
    REG_NO VARCHAR(45),
    KIN VARCHAR(255),
    PRIMARY KEY(REG_NO),
    FOREIGN KEY(REG_NO) REFERENCES mo(REG_NO)
);

INSERT INTO username(USER_NAME, REG_NO, KIN) VALUES
('Titus kiprono', 'MH47', 'JACOB'),
('DAVID OGUTA', 'MH21', 'OGUTA');

CREATE TABLE IF NOT EXISTS codeword(
    USER_NAME VARCHAR(255),
    REG_NO VARCHAR(45),
    passcode VARCHAR(255),
    PRIMARY KEY(REG_NO, passcode),
    FOREIGN KEY(USER_NAME) REFERENCES username(USER_NAME),
    FOREIGN KEY(REG_NO) REFERENCES mo(REG_NO)
);

-- Correcting the SHA2 function syntax and quotes for strings
INSERT INTO codeword(USER_NAME, REG_NO, passcode) VALUES
('Titus kiprono', 'MH47', SHA2('titus23*', 256)),
('David Oguta', 'MH21', SHA2('David3*', 256)),
('DANIEL', 'MH47', SHA2('DANIEL123*', 256));

SELECT * FROM codeword;

CREATE TABLE IF NOT EXISTS diagnostic(
    REG_NO VARCHAR(45) PRIMARY KEY,
    MEDICAL_HISTORY VARCHAR(255),
    FOREIGN KEY(REG_NO) REFERENCES mo(REG_NO)
);

CREATE TABLE IF NOT EXISTS Contact(
    REG_NO VARCHAR(45) PRIMARY KEY,
    KIN_CONTACT VARCHAR(10),
    USER_CONT VARCHAR(10),
    M_CONTACT VARCHAR(10),
    FOREIGN KEY(REG_NO) REFERENCES mo(REG_NO),
    FOREIGN KEY(KIN_CONTACT) REFERENCES username(KIN)
);


